function(e, t, n) {
    "use strict";
    n.r(t), t.default = "precision highp float;\n#define GLSLIFY 1\n\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform float uTime;\n\nattribute vec3 position;\nattribute vec2 uv;\n\nvarying vec2 vUv;\n\nvoid main() {\n  vUv = uv;\n\n  vec3 pos = position;\n\n  // pos.z += 0.3;\n  // pos.z += sin(pos.x + pos.y + uTime) * 0.3;\n\n  gl_Position = projectionMatrix * modelViewMatrix * vec4(pos, 1.0);\n}\n"
}, function(e, t, n) {
    "use strict";
    n.r(t), t.default = "precision highp float;\n#define GLSLIFY 1\nuniform sampler2D uTexture;\nuniform sampler2D uUv;\nuniform bool uFadeTop;\nuniform bool uFadeBottom;\nuniform float uTime;\nuniform float uOpacity;\nuniform vec2 uScreen;\nvarying vec2 vUv;\n\nfloat vignette(vec2 uv, float a, float b) {\n  float len = length(uv - vec2(0.28, 0.5));\n  return smoothstep(a, b, len);\n}\n\nvoid main() {\n  // vec2 screenUv = gl_FragCoord.xy / uResolution.xy;\n\n  vec4 uv = texture2D(uUv, vUv);\n  vec3 color = texture2D(uTexture, uv.xy).rgb;\n\n  // color += texture2D(uTexture, uv.xy + vec2(0.0, uScroll * 0.0001)).rgb;\n\n  // color += pow(uv.z * 6.0, 2.0);\n  color *= 0.8;\n\n  // float x = (uv.x * 2.0) + uTime * 0.07;\n  float x = (uv.x * 2.0) + uTime * 0.20;\n  float noise = (sin(x) + sin(2.2 * x + 5.52) + sin(2.9 * x + 0.93) + sin(4.6 * x + 8.94)) / 4.0;\n  noise *= 0.6;\n\n  // color += max(0.0, noise) * 1.0;\n  color *= 1.0 + max(0.0, noise) * 1.0;\n\n  color *= 1.0 + pow(uv.z * 3.0, 1.4);\n\n  // float y = (uv.y * 40.0) + uTime * 0.2;\n  // noise = (sin(y) + cos(2.4 * y + 7.52) + sin(2.9 * y + 0.93) + sin(4.6 * y + 8.94)) / 4.0;\n  // noise *= 0.3;\n\n  // color *= 1.0 + max(0.0, noise) * 1.0;\n\n  // color.rgb *= vignette(vUv, -0.3, 0.5);\n\n  gl_FragColor = vec4(color, uOpacity);\n\n  if (uFadeBottom) {\n    gl_FragColor.a *= smoothstep(0.0, 0.2, vUv.y);\n  }\n\n  if (uFadeTop) {\n    gl_FragColor.a *= 1.0 - smoothstep(0.8, 1.0, vUv.y);\n  }\n\n  // bottom / left fade\n  vec2 sUv = gl_FragCoord.xy / uScreen.xy;\n  float opMask = mix(0.6, 0.0, sUv.x);\n  opMask *= mix(0.5, 0.0, sUv.y);\n  gl_FragColor.rgb *= mix(0.6, 1.0, opMask);\n\n  // gl_FragColor = vec4(1.0, 0.0, 0.0, 1.0);\n}\n"
}
